//
// Generated file, do not edit! Created by opp_msgtool 6.0 from DeadlineMsg.msg.
//

#ifndef __DEADLINEMSG_M_H
#define __DEADLINEMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class DeadlineMsg;
/**
 * Class generated from <tt>DeadlineMsg.msg:19</tt> by opp_msgtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * message DeadlineMsg
 * {
 *     int ID;
 *     int provider;
 * }
 * </pre>
 */
class DeadlineMsg : public ::omnetpp::cMessage
{
  protected:
    int ID = 0;
    int provider = 0;

  private:
    void copy(const DeadlineMsg& other);

  protected:
    bool operator==(const DeadlineMsg&) = delete;

  public:
    DeadlineMsg(const char *name=nullptr, short kind=0);
    DeadlineMsg(const DeadlineMsg& other);
    virtual ~DeadlineMsg();
    DeadlineMsg& operator=(const DeadlineMsg& other);
    virtual DeadlineMsg *dup() const override {return new DeadlineMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getID() const;
    virtual void setID(int ID);

    virtual int getProvider() const;
    virtual void setProvider(int provider);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const DeadlineMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, DeadlineMsg& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline DeadlineMsg *fromAnyPtr(any_ptr ptr) { return check_and_cast<DeadlineMsg*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __DEADLINEMSG_M_H

