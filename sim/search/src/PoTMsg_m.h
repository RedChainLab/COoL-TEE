//
// Generated file, do not edit! Created by opp_msgtool 6.0 from PoTMsg.msg.
//

#ifndef __POTMSG_M_H
#define __POTMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class PoTMsg;
/**
 * Class generated from <tt>PoTMsg.msg:20</tt> by opp_msgtool.
 * <pre>
 * message PoTMsg
 * {
 *     int source;
 *     int otherProv;
 *     int ID;
 *     simtime_t time_send = -1;
 *     simtime_t time_in = -1;
 *     simtime_t time_queue = -1;
 *     simtime_t time_serv = -1;
 *     simtime_t time_out = -1;
 *     simtime_t time_recv = -1;
 * }
 * </pre>
 */
class PoTMsg : public ::omnetpp::cMessage
{
  protected:
    int source = 0;
    int otherProv = 0;
    int ID = 0;
    omnetpp::simtime_t time_send = -1;
    omnetpp::simtime_t time_in = -1;
    omnetpp::simtime_t time_queue = -1;
    omnetpp::simtime_t time_serv = -1;
    omnetpp::simtime_t time_out = -1;
    omnetpp::simtime_t time_recv = -1;

  private:
    void copy(const PoTMsg& other);

  protected:
    bool operator==(const PoTMsg&) = delete;

  public:
    PoTMsg(const char *name=nullptr, short kind=0);
    PoTMsg(const PoTMsg& other);
    virtual ~PoTMsg();
    PoTMsg& operator=(const PoTMsg& other);
    virtual PoTMsg *dup() const override {return new PoTMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSource() const;
    virtual void setSource(int source);

    virtual int getOtherProv() const;
    virtual void setOtherProv(int otherProv);

    virtual int getID() const;
    virtual void setID(int ID);

    virtual omnetpp::simtime_t getTime_send() const;
    virtual void setTime_send(omnetpp::simtime_t time_send);

    virtual omnetpp::simtime_t getTime_in() const;
    virtual void setTime_in(omnetpp::simtime_t time_in);

    virtual omnetpp::simtime_t getTime_queue() const;
    virtual void setTime_queue(omnetpp::simtime_t time_queue);

    virtual omnetpp::simtime_t getTime_serv() const;
    virtual void setTime_serv(omnetpp::simtime_t time_serv);

    virtual omnetpp::simtime_t getTime_out() const;
    virtual void setTime_out(omnetpp::simtime_t time_out);

    virtual omnetpp::simtime_t getTime_recv() const;
    virtual void setTime_recv(omnetpp::simtime_t time_recv);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const PoTMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, PoTMsg& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline PoTMsg *fromAnyPtr(any_ptr ptr) { return check_and_cast<PoTMsg*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __POTMSG_M_H

