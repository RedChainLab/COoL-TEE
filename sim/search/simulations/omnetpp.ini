[General]
**.delays_file= "D:\\Programming\\Datasets\\NetLatency-Data\\PlanetLab\\PlanetLabData_${datasetNum=18}"
**.location_index=0

sim-time-limit = 2400s
warmup-period = 2250s
**.warmup=2250s

seed-set = ${repetition}

**.n_sources=${nReqs=100}#1..10 step 1, 20..100 step 10}
**.n_sinks=nReqs

**.n_fifos=${nSP=12}

**.ratioRHM = ${rHM=0.5}#, 1}#0,0.5,1}
**.ratioSR = 0

*.fifos[*].serviceTime=1s/160
*.malSPs[*].serviceTime=1s/160

*.malSources[*].idx_offset = int(${nReqs} * ${rHM})

**.kErr=${kErr=0.00001*$nReqs} #0,0.00001*$nReqs
**.kD=${kD=0.1 ! kErr} #0,0.1

**.windowSize = 100#${ws=100}
**.dropSens = 0.3#${ds=0.3}

**.dropWaittime = 0s
**.minHonWaitDelay = 0ms#${hD=0ms}#, 200ms, 225ms, 250ms}#0ms,10ms,50ms,80ms,85.227ms,90ms,110ms,130ms,135.16ms,140ms, 160ms, 170ms,178.13ms,190ms,300ms}
**.hThroughput=0#${hT=0,0.25,0.5}#${hT=0,0.2,0.4,0.5,0.6,0.8,1}

#**.updateRatiosCount=1
**.x1=0.1

**.deltaNet=true#${dN=}
**.hon_wait_out = ${hW=0ms, 50ms}#, 6.25ms, 12.5ms, 25ms, 50ms, 100ms}

**.naiveH=0
**.naiveM = 0

*.sources[*].sinkVectorName = "sinks"
*.malSources[*].sinkVectorName = "malSinks"

**.outputPathPrefix = "E:/wt"

[TwoSpeedService]
network = TwoSpeedService
repeat = 500

**.kReqs=${k=1}#k=1,2,4
**.rho=${rho=25}#1,5,25,50,80} #25,50,80,90,95,100

**.sources[*].interarrivalMeanTime = ${iat=$nReqs s/(1280*($rho/100))}
**.malSources[*].interarrivalMeanTime = ${iat}

**.req_type = ${rt="LOolSource"}
**.ratioSHM = ${sHM=0.875,0.75,0.625,0.5}
**.net_delays = Vector{val:[135.16, 85.227, 178.13, 105.227, 162.867, 105.11, 85.227, 144.04]}

**.runPath = '${runnumber}-${repetition}-r${rho}%-w${hW}'

[TwoSpeedServiceNoLat]
network = TwoSpeedServiceNoLat
repeat = 100

**.sources[0..49].kReqs=${k=1}#k=1,2,4
**.sources[50..].kReqs=1

**.rho=${rho=50 ! k}#1,5,25,50,80} #25,50,80,90,95,100

**.sources[0..49].interarrivalMeanTime = ${iat=$nReqs s/(1280*($rho/100))}
**.sources[50..].interarrivalMeanTime = ${$nReqs s/(1280*(50/100))}

**.req_type = ${rt="LOolSource"}
**.ratioSHM = ${sHM=0,1/10,2/10,3/10,4/10,5/10,6/10,7/10,8/10,9/10}
**.net_delays = Vector{val:[0,0,0,0,0,0,0,0,0,0,0,0]}

**.runPath = '${runnumber}-${repetition}-r${rho}%-w${hW}'

[TwoSpeedServiceNoLatCuckooTiming]
network = TwoSpeedServiceNoLat
repeat = 100

**.kReqs=${k=1}#k=1,2,4
**.rho=${rho=50 ! k}#1,5,25,50,80} #25,50,80,90,95,100
**.interarrivalMeanTime = ${iat=$nReqs s/(1280*($rho/100))}

**.req_type = ${rt="LOolSource"}
**.ratioSHM = ${sHM=0,1/10,2/10,3/10,4/10,5/10,6/10,7/10,8/10,9/10}
**.net_delays = Vector{val:[0,0,0,0,0,0,0,0,0,0,0,0]}
**.sinks[50..].hardcodedRatios=true
**.sinks[50..].hardcodedRatiosVec=${Vector{val:[1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 1/10]},\
   Vector{val:[306666667/1000000000, 77037037/1000000000, 77037037/1000000000, 77037037/1000000000, 77037037/1000000000, 77037037/1000000000, 77037037/1000000000, 77037037/1000000000, 77037037/1000000000, 77037037/1000000000]},\
   Vector{val:[306666667/1000000000, 306666667/1000000000, 48333333/1000000000, 48333333/1000000000, 48333333/1000000000, 48333333/1000000000, 48333333/1000000000, 48333333/1000000000, 48333333/1000000000, 48333333/1000000000]},\
   Vector{val:[306666667/1000000000, 306666667/1000000000, 306666667/1000000000, 11428571/1000000000, 11428571/1000000000, 11428571/1000000000, 11428571/1000000000, 11428571/1000000000, 11428571/1000000000, 11428571/1000000000]},\
   Vector{val:[1/4, 1/4, 1/4, 1/4, 0, 0, 0, 0, 0, 0]},\
   Vector{val:[1/5, 1/5, 1/5, 1/5, 1/5, 0, 0, 0, 0, 0]},\
   Vector{val:[1/6, 1/6, 1/6, 1/6, 1/6, 1/6, 0, 0, 0, 0]},\
   Vector{val:[1/7, 1/7, 1/7, 1/7, 1/7, 1/7, 1/7, 0, 0, 0]},\
   Vector{val:[1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 0, 0]},\
   Vector{val:[1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 0]} ! sHM}
**.sinks[50..].updateRatiosCount=0

**.runPath = '${runnumber}-${repetition}-r${rho}%-w${hW}'

[TwoSpeedServiceNoLatCuckooContent]
network = TwoSpeedServiceNoLat
repeat = 100

**.kReqs=${k=1}#k=1,2,4
**.rho=${rho=50 ! k}#1,5,25,50,80} #25,50,80,90,95,100
**.interarrivalMeanTime = ${iat=$nReqs s/(1280*($rho/100))}

**.req_type = ${rt="LOolSource"}
**.ratioSHM = ${sHM=0,1/10,2/10,3/10,4/10,5/10,6/10,7/10,8/10,9/10}
**.net_delays = Vector{val:[0,0,0,0,0,0,0,0,0,0,0,0]}
**.sinks[50..].hardcodedRatios=true

**.sinks[50..].hardcodedRatiosVec=${Vector{val:[1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 1/10]},\
   Vector{val:[19/100, 9/100, 9/100, 9/100, 9/100, 9/100, 9/100, 9/100, 9/100, 9/100]},\
   Vector{val:[19/100, 19/100, 31/400, 31/400, 31/400, 31/400, 31/400, 31/400, 31/400, 31/400]},\
   Vector{val:[19/100, 19/100, 19/100, 61428571/1000000000, 61428571/1000000000, 61428571/1000000000, 61428571/1000000000, 61428571/1000000000, 61428571/1000000000, 61428571/1000000000]},\
   Vector{val:[19/100, 19/100, 19/100, 19/100, 1/25, 1/25, 1/25, 1/25, 1/25, 1/25]},\
   Vector{val:[19/100, 19/100, 19/100, 19/100, 19/100, 1/100, 1/100, 1/100, 1/100, 1/100]},\
   Vector{val:[1/6, 1/6, 1/6, 1/6, 1/6, 1/6, 0, 0, 0, 0]},\
   Vector{val:[1/7, 1/7, 1/7, 1/7, 1/7, 1/7, 1/7, 0, 0, 0]},\
   Vector{val:[1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 1/8, 0, 0]},\
   Vector{val:[1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 0]} ! sHM}
**.sinks[50..].updateRatiosCount=0

**.runPath = '${runnumber}-${repetition}-r${rho}%-w${hW}'

[TwoSpeedServiceNoLatPoT]
network = TwoSpeedServiceNoLatPoT
repeat = 100

**.kReqs=${k=1}#k=1,2,4
**.rho=${rho=75}#1,5,25,50,80} #25,50,80,90,95,100

**.sources[*].interarrivalMeanTime = ${iat=$nReqs s/(1280*($rho/100))}
**.malSources[*].interarrivalMeanTime = ${iat}

**.req_type = ${rt="PoTSource"}
**.ratioSHM = ${sHM=0,0.125,0.25,0.375,0.5,0.625,0.75,0.875}
**.net_delays = Vector{val:[0,0,0,0,0,0,0,0]}

**.runPath = '${runnumber}-${repetition}-r${rho}%-w${hW}'